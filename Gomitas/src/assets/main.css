@import "./base.css";

@font-face {
  font-family: 'Simplicity';
  src: url('./fonts/Simplicity.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}


#app {
  width: 100%;
  height: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: normal;
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.modal-content {
  display: flex;
  flex-direction: column;
  background-color: transparent;
  width: 100%; /* Adjust this as needed */
  height: 50%; /* Adjust this as needed */
  justify-content: center; /* Align children in the center vertically */
  align-items: center; /* Align children in the center horizontally */
}

.modal-content img {
  max-width: 100%; /* Ensure it doesn't overflow its container */
  max-height: 100%; /* Ensure it doesn't overflow its container */
  width: 15%; /* Scale the width automatically to maintain aspect ratio */
  height: auto; /* Scale the height automatically to maintain aspect ratio */
}

.overlay-content {
  position: relative;
  top: 250px;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  z-index: 99;
}

.auth_login {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.7); /* Semi-transparent black */
  z-index: 1000; /* Ensure it's above other elements */
}

.btn-holder {
  user-select: none;
  display: flex;
  position: relative;
  flex-direction: column;
  z-index: 2;
  width: 10em;
}

.ile-holder {
  display: flex;
  flex-direction: row;
}

.left-arrow-btn {
  display: flex;
  width: 50px; /* Set the width to the width of your SVG */
  height: 35px; /* Set the height to the height of your SVG */
  background-color: transparent;
  background-image: url('/svgs/Left_Arrow.svg'); /* Adjust path as necessary */
  background-size: contain; /* Or 'cover' or specific dimensions */
  background-repeat: no-repeat;
  border: none;
  margin-top: 5%;
  margin-right: 25%;
  cursor: pointer; /* Change cursor to pointer to indicate it's clickable */
}

.left-arrow-btn:active {
  background-image: url('/svgs/Left_Arrow_Click.svg');
}

.material-btn_container {
  display: flex;
  flex-direction: row;
}

.material-btn{
  border-radius: 50%;
  margin: 0.25em 0.25em 0em 0.25em;
  width: 40px; /* Set the width to the width of your SVG */
  height: 40px; /* Set the height to the height of your SVG */
  background-color: transparent;/* Or 'cover' or specific dimensions */
  cursor: pointer; /* Change cursor to pointer to indicate it's clickable */
}

.material-btn:active {
  border-color: #339D92;
}

.material-btn:disabled{
  opacity: 0;
  }

.right-arrow-btn {
  display: flex;
  width: 50px; /* Set the width to the width of your SVG */
  height: 35px; /* Set the height to the height of your SVG */
  background-color: transparent;
  background-image: url('/svgs/Right_Arrow.svg'); /* Adjust path as necessary */
  background-size: contain; /* Or 'cover' or specific dimensions */
  background-repeat: no-repeat;
  border: none;
  margin-top: 5%;
  margin-left: 25%;
  cursor: pointer; /* Change cursor to pointer to indicate it's clickable */
}

.right-arrow-btn:active {
  background-image: url('/svgs/Right_Arrow_Click.svg');
}

.left-arrow-btn:disabled, .right-arrow-btn:disabled {
  opacity: 0.5;
}

.radio-parent {
  padding-top: 0.1em;
}

.radio-btn {
  opacity: 0;
  width: 0;
  height: 0;
  position: absolute;
}

.radio-label {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.1em 0em 0.1em 0em;
  width: 150px;
  height: 2em;
  background-image: url('../../public/svgs/Ribbon_Label.svg');
  background-size: contain;
  background-repeat: no-repeat;
  text-align: center;
  line-height: 50px;
  cursor: pointer;
  font-family: 'Simplicity';
  font-size: 1.35em;
  font-weight: bold;
  color: #66c7c7;
}

.radio-btn:checked + .radio-label {
  background-image: url('../../public/svgs/Ribbon_Label_Click.svg');
  color: white;
}

.radio-btn:disabled + .radio-label {
  opacity: 0.5;
}

.name-field {
  display: flex;
  width: 100%;
  background: transparent;
  border-radius: 2rem;
  border-color: white;
  outline: none;
  color: #339D92;
}

.close-btn {
  position: relative;
  left: -10%;
  top: -1em;
  width: 50px; /* Set the width to the width of your SVG */
  height: 50px; /* Set the height to the height of your SVG */
  background-color: transparent;
  background-image: url('/svgs/Close_Button.svg'); /* Adjust path as necessary */
  background-size: contain; /* Or 'cover' or specific dimensions */
  border: none;
  cursor: pointer; /* Change cursor to pointer to indicate it's clickable */
}

.close-btn:active {
  background-image: url('/svgs/Close_Button_Click.svg'); /* Adjust path as necessary */
}

.cart-title {
  font-family: "Simplicity";
  font-size: 2em;
  color:#66c7c7;
  font-weight: bold;
  margin: 0;
}

.cart-btn {
  display: flex;
  margin: 0.25em 0.25em 0em 0em;
  width: 50px; /* Set the width to the width of your SVG */
  height: 50px; /* Set the height to the height of your SVG */
  background-color: transparent;
  background-image: url('/svgs/Cart_Button.svg'); /* Adjust path as necessary */
  background-size: contain; /* Or 'cover' or specific dimensions */
  border: none;
  cursor: pointer; /* Change cursor to pointer to indicate it's clickable */
}

.cart-btn:active {
  background-image: url('/svgs/Cart_Button_Click.svg');
}

.cart-btn:disabled {
  opacity: 0;
}

.label-text {
  display: flex;
  color: #339D92;
  font-family: 'Simplicity';
  font-size: 1.5em;
  font-weight: bold;
}

.reset-btn {
  display: flex;
  margin: 0.25em 0.25em 0em 0.25em;
  width: 50px; /* Set the width to the width of your SVG */
  height: 50px; /* Set the height to the height of your SVG */
  background-color: transparent;
  background-image: url('/svgs/Reset_Button.svg'); /* Adjust path as necessary */
  background-size: contain; /* Or 'cover' or specific dimensions */
  border: none;
  cursor: pointer; /* Change cursor to pointer to indicate it's clickable */
}

.reset-btn:active {
  background-image: url('/svgs/Reset_Button_Click.svg');
}

.reset-btn:disabled {
  opacity: 0;
}

.round-buttons {
  padding-top: 2%;
  display: flex;
  justify-content: left;
}

.switch {
  position: relative;
  display: inline-block;
  width: 100px;
  height: 34px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #d7a6b4;
  -webkit-transition: .4s;
  transition: .4s;
  z-index: 2;
}

.slider:before {
  position: absolute;
  content: "";
  height: 20px;
  width: 20px;
  left: 2px;
  bottom: 7px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
  z-index: 3;
}

.slider.on {
  background-color: #cccccc;
}

.slider.on:before {
  -webkit-transform: translateX(74px);
  -ms-transform: translateX(74px);
  transform: translateX(74px);
}

.slider.round {
  border-radius: 25px;
}

.slider.round:before {
  border-radius: 50%;
}

.slider-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 16px;
  font-weight: bold;
  font-family: "Simplicity";
  color: white;
  z-index: 1;
}

/* Adjust the color for better visibility when the switch is on */
.slider.on .slider-text {
  color: #d7a6b4;
}

/* @media (hover: hover) {
  a:hover {
    background-color: hsla(160, 100%, 37%, 0.2);
  }
}

@media (min-width: 1024px) {
  body {
    display: flex;
    place-items: center;
  }

  #app {
    display: grid;
    grid-template-columns: 1fr 1fr;
    padding: 0 2rem;
  }
} */
